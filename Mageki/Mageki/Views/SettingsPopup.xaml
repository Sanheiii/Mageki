<rg:PopupPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:rg="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
    xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
    xmlns:mageki="clr-namespace:Mageki"
    xmlns:views="clr-namespace:Mageki.Views"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    HasSystemPadding="False"
    HasKeyboardOffset="False"
    BackgroundColor="{AppThemeBinding Light=#AADDDDDD, Dark=#AA000000}"
    xmlns:resources="clr-namespace:Mageki.Resources"
    x:Class="Mageki.SettingsPopup"
    x:Name="Root">
    <rg:PopupPage.BindingContext>
        <mageki:SettingsViewModel />
    </rg:PopupPage.BindingContext>
    <rg:PopupPage.Resources>
        <Color x:Key="PrimaryColor">#3498DB</Color>
        <ResourceDictionary>
            <Style TargetType="Grid" x:Key="SettingsGridStyle">
                <Setter Property="HeightRequest" Value="48" />
                <Setter Property="Padding" Value="16,0,16,0" />
                <Setter Property="ColumnSpacing" Value="0" />
                <Setter Property="ColumnDefinitions" Value="Auto,*" />
            </Style>
            <Style TargetType="Frame" x:Key="SettingsFrameStyle">
                <Setter Property="Margin" Value="16,0,16,0" />
                <Setter Property="Padding" Value="0,0,0,0" />
                <Setter Property="HasShadow" Value="False" />
                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light=#AAFFFFFF, Dark=#AA222222}" />
            </Style>
            <Style TargetType="Label" x:Key="SettingsFrameHeaderStyle">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Margin" Value="24,0,0,0" />
                <Setter Property="TextColor" Value="{DynamicResource PrimaryColor}" />
            </Style>
            <Style TargetType="Label" x:Key="SettingsLabelStyle">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="VerticalTextAlignment" Value="Center" />
                <Setter Property="TextColor" Value="{AppThemeBinding Light=#FF000000, Dark=#FFFFFFFF}" />
            </Style>
            <Style TargetType="Entry" x:Key="SettingsEntryStyle">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="VerticalTextAlignment" Value="Center" />
                <Setter Property="TextColor" Value="{AppThemeBinding Light=#FF000000, Dark=#FFFFFFFF}" />
                <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            </Style>
            <Style TargetType="Slider" x:Key="SettingsSliderStyle">
                <Setter Property="MinimumTrackColor" Value="{DynamicResource PrimaryColor}" />
                <Setter Property="VerticalOptions" Value="Center" />
            </Style>
            <Style TargetType="Frame" x:Key="SettingsSelectionFrameStyle">
                <Setter Property="HasShadow" Value="False" />
                <Setter Property="BackgroundColor" Value="Transparent" />
                <Setter Property="Padding" Value="16,0" />
                <Setter Property="Margin" Value="8,8" />
                <Style.Triggers>
                    <Trigger TargetType="Frame" Property="views:ViewTag.Tag" Value="{x:Boolean true}">
                        <Setter Property="BorderColor" Value="{DynamicResource PrimaryColor}" />
                    </Trigger>
                    <Trigger TargetType="Frame" Property="views:ViewTag.Tag" Value="{x:Boolean false}">
                        <Setter Property="BorderColor" Value="Transparent" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Label" x:Key="SettingsSelectionLabelStyle">
                <Setter Property="VerticalTextAlignment" Value="Center" />
            </Style>
        </ResourceDictionary>
        <views:NotConverter x:Key="NotConverter" />
        <views:AndConverter x:Key="AndConverter" />
        <views:EnumSelectedConverter x:Key="EnumSelectedConverter" />
        <views:EquivalentConverter x:Key="EquivalentConverter" />
        <views:PortConverter x:Key="PortConverter" />
        <views:StatusConverter x:Key="StatusConverter" />
    </rg:PopupPage.Resources>
    <Grid RowDefinitions="Auto,*" BackgroundColor="Transparent">
        <mageki:NavigationBar Title="{x:Static resources:AppResources.Settings}" GoBackCommand="{Binding GoBack}"
                              GoBackCommandParameter="{x:Reference Root}" />
        <ScrollView Grid.Row="1">
            <StackLayout Padding="0,0,0,16">
                <!--连接-->
                <Label Style="{StaticResource SettingsFrameHeaderStyle}"
                       Text="{x:Static resources:AppResources.Connection}" />
                <Frame CornerRadius="8" Style="{StaticResource SettingsFrameStyle}">
                    <StackLayout Spacing="0">
                        <!--端口-->
                        <Grid Style="{StaticResource SettingsGridStyle}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.Port}" />
                            <Entry Style="{StaticResource SettingsEntryStyle}" x:Name="PortEntry" Grid.Column="1"
                                   Keyboard="Numeric" MaxLength="5"
                                   Text="{Binding Port,Converter={StaticResource PortConverter},ConverterParameter={x:Reference PortEntry}}"
                                   Placeholder="4354" />
                        </Grid>
                        <!--协议-->
                        <Grid ColumnDefinitions="*,Auto,Auto" Style="{StaticResource SettingsGridStyle}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.Protocol}" />
                            <Frame Grid.Column="1" Style="{x:StaticResource SettingsSelectionFrameStyle}"
                                   views:ViewTag.Tag="{Binding Protocol,Converter={StaticResource EnumSelectedConverter},ConverterParameter={x:Static mageki:Protocol.TCP}}"
                                   xct:TouchEffect.NativeAnimation="True"
                                   xct:TouchEffect.Command="{Binding SelectProtocol}"
                                   xct:TouchEffect.CommandParameter="{x:Static mageki:Protocol.TCP}">
                                <Label Text="TCP" Style="{x:StaticResource SettingsSelectionLabelStyle}" />
                            </Frame>
                            <Frame Grid.Column="2" Style="{x:StaticResource SettingsSelectionFrameStyle}"
                                   views:ViewTag.Tag="{Binding Protocol,Converter={StaticResource EnumSelectedConverter},ConverterParameter={x:Static mageki:Protocol.UDP}}"
                                   xct:TouchEffect.NativeAnimation="True"
                                   xct:TouchEffect.Command="{Binding SelectProtocol}"
                                   xct:TouchEffect.CommandParameter="{x:Static mageki:Protocol.UDP}">
                                <Label Text="UDP" Style="{x:StaticResource SettingsSelectionLabelStyle}" />
                            </Frame>
                        </Grid>
                        <!--IP-->
                        <Grid Style="{StaticResource SettingsGridStyle}" IsVisible="{Binding Protocol,Converter={StaticResource EquivalentConverter},ConverterParameter={x:Static mageki:Protocol.UDP}}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.IPAddress}" />
                            <Entry Style="{StaticResource SettingsEntryStyle}" x:Name="IPEntry" Grid.Column="1"
                                   Text="{Binding IP}"
                                   Placeholder="Broadcast" />
                        </Grid>
                        <!--状态-->
                        <Grid Style="{StaticResource SettingsGridStyle}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.Status}" />
                            <Label Style="{StaticResource SettingsLabelStyle}" Grid.Column="1" HorizontalTextAlignment="End" Margin="16,0"
                                   Text="{Binding Status,Converter={StaticResource StatusConverter}}"/>
                        </Grid>
                    </StackLayout>
                </Frame>
                <!--键盘-->
                <Label Style="{StaticResource SettingsFrameHeaderStyle}"
                       Text="{x:Static resources:AppResources.Keyboard}" />
                <Frame CornerRadius="8" Style="{StaticResource SettingsFrameStyle}">
                    <StackLayout Spacing="0">
                        <!--隐藏按钮-->
                        <Grid Style="{StaticResource SettingsGridStyle}" xct:TouchEffect.NativeAnimation="True"
                              xct:TouchEffect.Command="{Binding ToggleSwitch}"
                              xct:TouchEffect.CommandParameter="{x:Reference HideButtonsSwitch}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.HideGameButtons}" />
                            <Switch x:Name="HideButtonsSwitch" IsToggled="{Binding HideGameButtons}" Grid.Column="1"
                                    HorizontalOptions="End" VerticalOptions="Center" />
                        </Grid>
                        <!--按钮下边距-->
                        <Grid ColumnDefinitions="Auto,Auto,*" Style="{StaticResource SettingsGridStyle}"
                              IsVisible="{Binding Source={x:Reference HideButtonsSwitch},Path=IsToggled,Converter={StaticResource NotConverter}}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.ButtonBottomMargin}" />
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{Binding ButtonBottomMargin,StringFormat='{0:F2}'}" Grid.Column="1"
                                   Margin="16,0,0,0" WidthRequest="50" />
                            <Slider Style="{StaticResource SettingsSliderStyle}" Maximum="1" Minimum="0"
                                    Grid.Column="2" Value="{Binding ButtonBottomMargin}" />
                        </Grid>
                        <!--防误触-->
                        <Grid Style="{StaticResource SettingsGridStyle}"
                              xct:TouchEffect.NativeAnimation="True"
                              xct:TouchEffect.Command="{Binding ToggleSwitch}"
                              xct:TouchEffect.CommandParameter="{x:Reference AntiMisTouchSwitch}"
                              IsVisible="{Binding Source={x:Reference HideButtonsSwitch},Path=IsToggled,Converter={StaticResource NotConverter}}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.AntiMisTouch}" />
                            <Switch x:Name="AntiMisTouchSwitch" IsToggled="{Binding AntiMisTouch}" Grid.Column="1" HorizontalOptions="End"
                                    VerticalOptions="Center" />
                        </Grid>
                    </StackLayout>
                </Frame>
                <!--摇杆与侧键-->
                <Label Style="{StaticResource SettingsFrameHeaderStyle}"
                       Text="{x:Static resources:AppResources.LeverAndWAD}" />
                <Frame CornerRadius="8" Style="{StaticResource SettingsFrameStyle}">
                    <StackLayout Spacing="0">
                        <!--摇杆移动模式-->
                        <Grid ColumnDefinitions="*,Auto,Auto" Style="{StaticResource SettingsGridStyle}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.LeverMoveMode}" />
                            <Frame Grid.Column="1" Style="{x:StaticResource SettingsSelectionFrameStyle}"
                                   views:ViewTag.Tag="{Binding LeverMoveMode,Converter={StaticResource EnumSelectedConverter},ConverterParameter={x:Static mageki:LeverMoveMode.Relative}}"
                                   xct:TouchEffect.NativeAnimation="True"
                                   xct:TouchEffect.Command="{Binding SelectLeverMoveMode}"
                                   xct:TouchEffect.CommandParameter="{x:Static mageki:LeverMoveMode.Relative}">
                                <Label Text="{x:Static resources:AppResources.Relative}"
                                       Style="{x:StaticResource SettingsSelectionLabelStyle}" />
                            </Frame>
                            <Frame Grid.Column="2" Style="{x:StaticResource SettingsSelectionFrameStyle}"
                                   views:ViewTag.Tag="{Binding LeverMoveMode,Converter={StaticResource EnumSelectedConverter},ConverterParameter={x:Static mageki:LeverMoveMode.Absolute}}"
                                   xct:TouchEffect.NativeAnimation="True"
                                   xct:TouchEffect.Command="{Binding SelectLeverMoveMode}"
                                   xct:TouchEffect.CommandParameter="{x:Static mageki:LeverMoveMode.Absolute}">
                                <Label Text="{x:Static resources:AppResources.Absolute}"
                                       Style="{x:StaticResource SettingsSelectionLabelStyle}" />
                            </Frame>
                        </Grid>
                        <!--摇杆线性度-->
                        <Grid ColumnDefinitions="Auto,Auto,*" Style="{StaticResource SettingsGridStyle}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.LeverLinearity}" />
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{Binding LeverLinearity,StringFormat='1/{0}'}" Grid.Column="1"
                                   Margin="16,0,0,0" WidthRequest="50" />
                            <Slider Style="{StaticResource SettingsSliderStyle}"
                                    Maximum="{Binding MaxLeverLinearity,Mode=OneTime}"
                                    Minimum="{Binding MinLeverLinearity,Mode=OneTime}" Grid.Column="2"
                                    Value="{Binding LeverLinearity}" />
                        </Grid>
                        <!--摇杆灵敏度-->
                        <Grid ColumnDefinitions="Auto,Auto,*" Style="{StaticResource SettingsGridStyle}"
                              IsVisible="{Binding LeverMoveMode,Converter={StaticResource EnumSelectedConverter},ConverterParameter={x:Static mageki:LeverMoveMode.Relative}}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.LeverSensitivity}" />
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{Binding LeverSensitivity,StringFormat='{0:F2}'}" Grid.Column="1"
                                   Margin="16,0,0,0" WidthRequest="50" />
                            <Slider Style="{StaticResource SettingsSliderStyle}" Maximum="10" Minimum="-10"
                                    Grid.Column="2" Value="{Binding LeverSensitivity}" />
                        </Grid>
                        <!--处理摇杆溢出值-->
                        <Grid Style="{StaticResource SettingsGridStyle}"
                              IsVisible="{Binding LeverMoveMode,Converter={StaticResource EnumSelectedConverter},ConverterParameter={x:Static mageki:LeverMoveMode.Relative}}"
                              xct:TouchEffect.NativeAnimation="True"
                              xct:TouchEffect.Command="{Binding ToggleSwitch}"
                              xct:TouchEffect.CommandParameter="{x:Reference HandleLeverOverflow}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.EnableLeverOverflowHandling}" />
                            <Switch x:Name="HandleLeverOverflow" IsToggled="{Binding EnableLeverOverflowHandling}"
                                    Grid.Column="1" HorizontalOptions="End" VerticalOptions="Center" />
                        </Grid>
                        <!--合并摇杆与侧键-->
                        <Grid Style="{StaticResource SettingsGridStyle}"
                              IsVisible="{Binding LeverMoveMode,Converter={StaticResource EnumSelectedConverter},ConverterParameter={x:Static mageki:LeverMoveMode.Relative}}"
                              xct:TouchEffect.NativeAnimation="True"
                              xct:TouchEffect.Command="{Binding ToggleSwitch}"
                              xct:TouchEffect.CommandParameter="{x:Reference MergeLeverAndSideButtonSwitch}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.EnableCompositeMode}" />
                            <Switch x:Name="MergeLeverAndSideButtonSwitch" IsToggled="{Binding EnableCompositeMode}"
                                    Grid.Column="1" HorizontalOptions="End" VerticalOptions="Center" />
                        </Grid>
                    </StackLayout>
                </Frame>
                <!--其它-->
                <Label Style="{StaticResource SettingsFrameHeaderStyle}"
                       Text="{x:Static resources:AppResources.Others}" />
                <Frame CornerRadius="8" Style="{StaticResource SettingsFrameStyle}">
                    <StackLayout Spacing="0">
                        <!--触摸反馈-->
                        <Grid Style="{StaticResource SettingsGridStyle}"
                              xct:TouchEffect.NativeAnimation="True"
                              xct:TouchEffect.Command="{Binding ToggleSwitch}"
                              xct:TouchEffect.CommandParameter="{x:Reference HapticFeedbackSwitch}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.EnableHapticFeedback}" />
                            <Switch x:Name="HapticFeedbackSwitch" IsToggled="{Binding EnableHapticFeedback}" Grid.Column="1" HorizontalOptions="End"
                                    VerticalOptions="Center" />
                        </Grid>
                        <!--Aime卡号-->
                        <Grid Style="{StaticResource SettingsGridStyle}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.AimeID}" />
                            <Entry Style="{StaticResource SettingsEntryStyle}" x:Name="AimeIdEntry" Grid.Column="1"
                                   Keyboard="Numeric" MaxLength="20" Text="{Binding Aimeid}"
                                   Placeholder="{x:Static resources:AppResources.AimeIDPlaceHolder}" />
                        </Grid>
                        <!--Test键-->
                        <Grid Style="{StaticResource SettingsGridStyle}" xct:TouchEffect.NativeAnimation="True"
                              xct:TouchEffect.State="{Binding TestState}">
                            <Label Style="{StaticResource SettingsLabelStyle}" Grid.ColumnSpan="2"
                                   Text="{x:Static resources:AppResources.TestButton}" />
                        </Grid>
                        <!--Service键-->
                        <Grid Style="{StaticResource SettingsGridStyle}" xct:TouchEffect.NativeAnimation="True"
                              xct:TouchEffect.State="{Binding ServiceState}">
                            <Label Style="{StaticResource SettingsLabelStyle}" Grid.ColumnSpan="2"
                                   Text="{x:Static resources:AppResources.ServiceButton}" />
                        </Grid>
                    </StackLayout>
                </Frame>
                <!--关于-->
                <Label Style="{StaticResource SettingsFrameHeaderStyle}" Text="{x:Static resources:AppResources.About}" />
                <Frame CornerRadius="8" Style="{StaticResource SettingsFrameStyle}">
                    <StackLayout Spacing="0">
                        <!--版本-->
                        <Grid Style="{StaticResource SettingsGridStyle}" ColumnSpacing="16"
                              xct:TouchEffect.NativeAnimation="True" xct:TouchEffect.Command="{Binding CheckUpdate}"
                              xct:TouchEffect.CommandParameter="{x:Reference Root}">
                            <Label Style="{StaticResource SettingsLabelStyle}"
                                   Text="{x:Static resources:AppResources.Version}" />
                            <Label Style="{StaticResource SettingsLabelStyle}" Grid.Column="1"
                                   Text="{Binding Version,Mode=OneTime}" />
                        </Grid>
                    </StackLayout>
                </Frame>
            </StackLayout>
        </ScrollView>
    </Grid>
</rg:PopupPage>